<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap>
	<select id="pages.module.customer.customerBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		   a.id
		 ,isjoin
		 ,joiniddesc
		 ,joinid
		 ,jointype
		 ,iscarrier
		 ,istruck
		 ,iscustom
		 ,issupplier
		 ,ishipper
		 ,isconsignee
		 ,iswarehouse
		 ,isagent
		 ,isfcl
		 ,isddp
		 ,islcl
		 ,isair
		 ,code
		 ,abbr
		 ,namec
		 ,namee
		 ,level
		 ,salesnamec
		 ,portdesc
		 ,isofficial
		 ,iscustomer
		 ,isairline
		 ,iscooperative
		 ,iscarrier
		 ,isconsignee
		 ,isar
		 ,isap
		 ,isfactory
		 ,a.inputer
		 ,a.inputtime
		 ,a.updater
		 ,a.updatetime
		 ,corper
		 ,depter
		 ,(SELECT string_agg(x.namec||'/'||x.namee||'/'||COALESCE((SELECT name FROM sys_department WHERE id = x.deptid),''),f_newline()) FROM sys_user x WHERE x.isdelete = FALSE AND EXISTS(SELECT 1 FROM sys_user_assign y WHERE y.isdelete = FALSE AND y.linkid=a.id AND linktype='C' AND roletype='S' AND y.userid=x.id)) assignsalesnamec
		 ,(SELECT string_agg(x.namec,',') FROM sys_user x , sys_user_assign y WHERE x.isdelete = FALSE AND y.isdelete = FALSE AND y.linkid=a.id AND linktype='C' AND roletype='O' AND y.userid=x.id) operationnamec
		 ,COALESCE((SELECT x.namec FROM sys_user x where x.code = a.inputer and x.isdelete = false limit 1),a.inputer) AS inputername
		 ,COALESCE((SELECT x.namec FROM sys_user x where x.code = a.updater and x.isdelete = false limit 1),a.updater) AS updatername
		 ,daysar
		 ,addressc
		 ,addresse
		 ,contact
		 ,tel1
		 ,(select namec from dat_filedata d WHERE d.isleaf = TRUE AND d.isdelete = false AND d.fkcode = 90 AND d.code = a.srctype LIMIT 1) AS srctype
		 ,customertype
		 ,(SELECT count(*) FROM sys_attachment x WHERE isdelete = FALSE AND linkid = a.id ) AS attachmentcount
		 ,(select string_agg(namec||':'||y.remarks,f_newline()) from sys_user x , sys_user_assign y where x.id = y.userid AND x.isdelete = false AND y.isdelete = false AND y.linkid = a.id AND y.linktype='C' AND y.roletype='S') assignsalesremarks
		 ,checkter
		 ,checktime
		 ,(select now()::DATE - MAX(b.jobdate) from fina_jobs b where a.id = b.customerid AND b.isdelete = false) AS notshippeddays
		 ,(SELECT x.isstart FROM sys_corporation_black x WHERE x.linkid = a.id AND x.isdelete = FALSE AND x.isstart = TRUE) AS isblacklist
		 ,sc.merchantcode
		 , (EXISTS(
				SELECT 1
				FROM sys_attachment sa LEFT JOIN sys_role sr ON sa.roleid=sr.id
				WHERE 1=1 AND sa.isdelete = FALSE AND sa.linkid = a.id
				AND sr.isdelete = FALSE 	AND sr.roletype = 'F' AND sr.name='合同文本' LIMIT 1
		)) AS iscontract
		, (SELECT sa.validdate
			FROM sys_attachment sa LEFT JOIN sys_role sr ON sa.roleid=sr.id
			WHERE 1=1 AND sa.isdelete = FALSE AND sa.linkid = a.id
			AND sr.isdelete = FALSE 	AND sr.roletype = 'F' AND sr.name='合同文本' LIMIT 1
		)AS contractvaliddate
		FROM _sys_corporation a
		LEFT JOIN sys_corpext sc ON a.id=sc.customerid
		WHERE $qry$
			$filter$
			AND isdelete = false
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.customerBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
		 count(*) AS counts
		FROM _sys_corporation a
		LEFT JOIN sys_corpext sc ON a.id=sc.customerid
		WHERE $qry$ 
			$filter$
			AND isdelete = false
	</select>


	<select id="pages.module.customer.csuserBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 t.* ,a.abbr
		FROM cs_user t ,sys_corporation a 
		WHERE $qry$ 
			AND t.corpid = a.id
			$filter$
			AND a.isdelete = false
		ORDER BY t.code
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.csuserBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM cs_user t ,sys_corporation a 
		WHERE $qry$ 
			AND t.corpid = a.id
			$filter$
			AND a.isdelete = false
	</select>
	
	<!--
	多操作公司查询
	-->
	<select id="pages.module.customer.finacorpBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT 
		(SELECT namec FROM sys_user WHERE id = c.inputer :: BIGINT  AND isdelete =FALSE limit 1) AS inputername
		,(SELECT abbr FROM sys_corporation WHERE id = c.corpid AND isdelete = FALSE limit 1) AS corpname 
		,(SELECT namec FROM dat_filedata WHERE code = c.corpoptype AND isdelete = FALSE limit 1) AS corpoptype
		,c.inputtime
		,c.id
		,c.jobid
		FROM fina_corp c
		WHERE 
		jobid = $jobsql$
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.finacorpBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT count(*) AS counts FROM fina_corp WHERE jobid = $jobsql$
	</select>
	<!--
	帐号查询
	-->
	<select id="pages.module.customer.accountBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select  t.*
		FROM sys_corpaccount t  ,sys_corporation a
		WHERE $qry$ 
			AND t.customerid = a.id
			$filter$
			AND t.isdelete = false
			AND a.isdelete = false
		LIMIT $limit$ OFFSET $start$	
	</select>
	<select id="pages.module.customer.accountBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM sys_corpaccount t  ,sys_corporation a 
		WHERE $qry$ 
			AND t.customerid = a.id
			$filter$
			AND t.isdelete = false
			AND a.isdelete = false
	</select>





	<select id="pages.module.customer.customerchooseBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT 
			*
		FROM sys_corporation c
		WHERE $qry$ 
		 AND c.iswarehouse = true
		 	AND c.iscustomer = 'Y'
		 		AND c.isdelete = false
		
		
	</select>
	<select id="pages.module.customer.customerchooseBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT 
			count(*) AS counts 
		FROM sys_corporation c
		WHERE $qry$ 
		  AND c.iswarehouse = true
		  	AND c.iscustomer = 'Y'
		  		AND c.isdelete = false
	</select>

	<select id="pages.module.customer.contactBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		  c.*
		  ,(select namec FROM sys_user where id =(select salesid from sys_corpcontacts where id = c.id limit 1) limit 1) as salenamec
		FROM _sys_corpcontacts c  ,sys_corporation a 
		WHERE $qry$ 
			AND c.customerid = a.id
			$filter$
			AND c.isdelete = false
			AND a.isdelete = false
		ORDER BY contactypedesc2 DESC
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.contactBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_corpcontacts c ,sys_corporation a 
		WHERE $qry$ 
			AND c.customerid = a.id
			$filter$
			AND c.isdelete = false
			AND a.isdelete = false
	</select>

	<select id="pages.module.customer.custcareBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		  t.* 
		FROM _sys_corpcare t   ,sys_corporation a 
		WHERE $qry$ 
			AND t.customerid = a.id
			$filter$
			AND t.isdelete = false
			AND a.isdelete = false
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.custcareBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_corpcare t   ,sys_corporation a 
		WHERE $qry$ 
			AND t.customerid = a.id
			$filter$
			AND t.isdelete = false
			AND a.isdelete = false
	</select>

	<select id="pages.module.customer.memorialdayBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		  t.* 
		FROM _sys_corpmemory t  ,sys_corporation a 
		WHERE $qry$ 
			AND t.customerid = a.id
			$filter$
			AND t.isdelete = false
			AND a.isdelete = false
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.memorialdayBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_corpmemory t  ,sys_corporation a 
		WHERE $qry$ 
			AND t.customerid = a.id
			$filter$
			AND t.isdelete = false
			AND a.isdelete = false
	</select>

	<select id="pages.module.customer.custserviceBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		  t.* 
		FROM _sys_corpservice t  ,sys_corporation a 
		WHERE $qry$ 
			AND t.customerid = a.id
			$filter$
			AND t.isdelete = false
			AND a.isdelete = false
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.custserviceBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_corpservice t  ,sys_corporation a 
		WHERE $qry$ 
			AND t.customerid = a.id
			$filter$
			AND t.isdelete = false
			AND a.isdelete = false
	</select>

	<select id="pages.module.customer.assigneduserBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		  * 
		  ,(SELECT orderno FROM dat_filedata WHERE fkcode = 160 AND isleaf = TRUE AND isdelete = false AND code = t.roletype) AS orderno
		  ,(SELECT namec||'/'||namee||'/'||COALESCE((SELECT name FROM sys_department WHERE id = x.deptid),'') FROM sys_user x WHERE id = t.userid) userser
		  ,(SELECT f_sys_getls('userid=$userid$;lskey='||namec)::text FROM dat_filedata WHERE fkcode = 160 AND isleaf = TRUE AND isdelete = false AND code = t.roletype) AS roletypedesc2
		  ,COALESCE((SELECT x.namec FROM sys_user x where x.code = t.inputer and x.isdelete = false limit 1),t.inputer) AS inputername
		  ,COALESCE((SELECT x.namec FROM sys_user x where x.code = t.updater and x.isdelete = false limit 1),t.updater) AS updatername
		FROM _sys_user_assign t 
		WHERE $qry$ 
			$filter$
			ORDER BY orderno,rolearea,roletype desc,polid
			LIMIT 100 OFFSET 0
	</select>
	<select id="pages.module.customer.assigneduserBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_user_assign t 
		WHERE $qry$ 
			$filter$
	</select>

	<select id="pages.module.customer.custlibBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		   * 
		  ,((SELECT COUNT(DISTINCT(corpid)) FROM sys_custlib_cust x WHERE x.custlibid = t.id) || '/' || (SELECT COUNT(1) FROM sys_corporation y WHERE y.isdelete = FALSE))AS custcount
		  ,((SELECT COUNT(DISTINCT(userid)) FROM sys_custlib_user x WHERE x.custlibid = t.id) || '/' || (SELECT COUNT(1) FROM sys_user y WHERE y.iscsuser = FALSE AND y.isdelete = FALSE AND y.isinvalid = TRUE)) AS usercount
		FROM sys_custlib t 
		WHERE $qry$ 
			AND libtype = 'L'
			AND isdelete = false
		ORDER BY corper,depter,jobdesc,code
	</select>
	<select id="pages.module.customer.custlibBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM sys_custlib t 
		WHERE $qry$ 
			AND libtype = 'L'
			AND isdelete = false
	</select>

	<select id="pages.module.customer.custlibBean.userGrid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		   * 
		FROM sys_user t 
		WHERE $qry$ 
			AND isdelete = FALSE
		ORDER BY corper,depter,jobdesc,code
	</select>
	<select id="pages.module.customer.custlibBean.userGrid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM sys_user t 
		WHERE $qry$ 
			AND isdelete = FALSE
	</select>


	<select id="pages.module.customer.custlibuserBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT 
		 * 
		FROM _sys_user t 
		WHERE $qry$ 
			AND isdelete = FALSE 
			AND isadmin = 'N'
			AND iscsuser = FALSE
			AND EXISTS(SELECT 1 FROM sys_custlib_user x WHERE x.custlibid = $libid$ AND x.userid = t.id)
		ORDER BY corpid,depter2,isinvalid DESC, code
	</select>
	<select id="pages.module.customer.custlibuserBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_user t 
		WHERE $qry$ 
			AND isdelete = false 
			AND isadmin = 'N'
			AND iscsuser = FALSE
			AND EXISTS(SELECT 1 FROM sys_custlib_user x WHERE x.custlibid = $libid$ AND x.userid = t.id)
	</select>

	<select id="pages.module.customer.custlibuserBean.from.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 * 
		FROM _sys_user t 
		WHERE $qry$ 
			AND isdelete = FALSE 
			AND isadmin = 'N'
			AND iscsuser = FALSE
			AND NOT EXISTS(SELECT 1 FROM sys_custlib_user x WHERE x.custlibid = $libid$ AND x.userid = t.id)
		ORDER BY corpid,depter2,isinvalid DESC, code
	</select>
	<select id="pages.module.customer.custlibuserBean.from.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_user t 
		WHERE $qry$ 
			AND isdelete = false 
			AND isadmin = 'N'
			AND iscsuser = FALSE
			AND NOT EXISTS(SELECT 1 FROM sys_custlib_user x WHERE x.custlibid = $libid$ AND x.userid = t.id)
	</select>


	<select id="pages.module.customer.custlibcustBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 * 
		 ,COALESCE((SELECT x.namec FROM sys_user x where x.code = t.inputer and x.isdelete = false limit 1),t.inputer) AS inputername
		 ,COALESCE((SELECT x.namec FROM sys_user x where x.code = t.updater and x.isdelete = false limit 1),t.updater) AS updatername
		FROM sys_corporation t 
		WHERE $qry$ 
			AND isdelete = FALSE 
			AND EXISTS(SELECT 1 FROM sys_custlib_cust x WHERE x.custlibid = $libid$ AND x.corpid = t.id)
		ORDER BY code
	</select>
	<select id="pages.module.customer.custlibcustBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM sys_corporation t 
		WHERE $qry$ 
			$filter$
			AND isdelete = FALSE 
			AND EXISTS(SELECT 1 FROM sys_custlib_cust x WHERE x.custlibid = $libid$ AND x.corpid = t.id)
	</select>

	<select id="pages.module.customer.custlibcustBean.from.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 * 
		FROM sys_corporation t 
		WHERE $qry$ 
			$filter$
			AND isdelete = FALSE 
			AND NOT EXISTS(SELECT 1 FROM sys_custlib_cust x WHERE x.custlibid = $libid$ AND x.corpid = t.id)
		ORDER BY code
	</select>
	<select id="pages.module.customer.custlibcustBean.from.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		
		select
		count(*) AS counts
		FROM sys_corporation t
		WHERE $qry$
		AND isdelete = FALSE
		AND NOT EXISTS(SELECT 1 FROM sys_custlib_cust x WHERE x.custlibid =
		$libid$ AND x.corpid = t.id)
	</select>

	<select id="pages.module.customer.potcustomerBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
		*
		FROM _sys_corporation a
		WHERE $qry$
		$filter$
		AND iscustomer = 'Y'
		AND isofficial = 'F'
		AND isdelete = false
	</select>
	<select id="pages.module.customer.potcustomerBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
		count(*) AS counts
		FROM _sys_corporation a
		WHERE $qry$
		$filter$
		AND iscustomer = 'Y'
		AND isofficial = 'F'
		AND isdelete = false
	</select>

	<select id="pages.module.customer.mycustomerBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
			*
		FROM _sys_corporation a , sys_user s
		WHERE $qry$
			$filter$
			AND iscustomer = 'Y'
			AND s.customerid = a.id
			AND s.isdelete = FALSE
			AND a.isdelete = false
	</select>
	<select id="pages.module.customer.mycustomerBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
			count(*) AS counts
		FROM _sys_corporation a , sys_user s
		WHERE $qry$
		$filter$
			AND iscustomer = 'Y'
			AND s.isdelete = FALSE
			AND a.isdelete = false
	</select>

	<select id="pages.module.customer.custregisterBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
			*
		FROM cs_register a
		WHERE $qry$
			AND a.isdelete = false
			group by id
			order by id
	</select>
	<select id="pages.module.customer.custregisterBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
			count(*) AS counts
		FROM cs_register a
		WHERE $qry$
			AND a.isdelete = false
	</select>

	<select id="pages.module.customer.customerdeployBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		   id
		 ,isjoin
		 ,joiniddesc
		 ,joinid
		 ,jointype
		 ,iscarrier
		 ,istruck
		 ,iscustom
		 ,issupplier
		 ,ishipper
		 ,isconsignee
		 ,iswarehouse
		 ,isagent
		 ,isfcl
		 ,isddp
		 ,islcl
		 ,isair
		 ,code
		 ,abbr
		 ,namec
		 ,namee
		 ,level
		 ,salesnamec
		 ,portdesc
		 ,isofficial
		 ,iscustomer
		 ,isairline
		 ,iscooperative
		 ,iscarrier
		 ,isconsignee
		 ,isar
		 ,isap
		 ,isfactory
		 ,inputer
		 ,inputtime
		 ,updater
		 ,updatetime
		 ,corper
		 ,depter
		 ,(SELECT string_agg(x.namec||'/'||x.namee||'/'||COALESCE((SELECT name FROM sys_department WHERE id = x.deptid),''),f_newline()) FROM sys_user x WHERE x.isdelete = FALSE AND EXISTS(SELECT 1 FROM sys_user_assign y WHERE y.isdelete = FALSE AND y.linkid=a.id AND linktype='C' AND roletype='S' AND y.userid=x.id)) assignsalesnamec
		 ,(SELECT string_agg(x.namec,',') FROM sys_user x , sys_user_assign y WHERE x.isdelete = FALSE AND y.isdelete = FALSE AND y.linkid=a.id AND linktype='C' AND roletype='O' AND y.userid=x.id) operationnamec
		 ,(SELECT string_agg(x.namec,',') FROM sys_user x , sys_user_assign y WHERE x.isdelete = FALSE AND y.isdelete = FALSE AND y.linkid=a.id AND linktype='C' AND roletype='C' AND y.userid=x.id) servicenamec
		 ,(SELECT string_agg(x.namec,',') FROM sys_user x , sys_user_assign y WHERE x.isdelete = FALSE AND y.isdelete = FALSE AND y.linkid=a.id AND linktype='C' AND roletype='D' AND y.userid=x.id) filesnamec
		 ,COALESCE((SELECT x.namec FROM sys_user x where x.code = a.inputer and x.isdelete = false limit 1),a.inputer) AS inputername
		 ,COALESCE((SELECT x.namec FROM sys_user x where x.code = a.updater and x.isdelete = false limit 1),a.updater) AS updatername
		FROM _sys_corporation a  
		WHERE $qry$ 
			$filter$
			$namecstr$
			AND isdelete = false
			AND (salesid IS NOT NULL OR EXISTS(SELECT 1 FROM sys_user_assign x WHERE x.linktype='C' AND x.userid IS NOT NULL AND x.linkid = a.id))
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.customerdeployBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_corporation a 
		WHERE $qry$ 
			$filter$
			$namecstr$
			AND isdelete = false
			AND (salesid IS NOT NULL OR EXISTS(SELECT 1 FROM sys_user_assign x WHERE x.linktype='C' AND x.userid IS NOT NULL AND x.linkid = a.id))
	</select>

	<select id="pages.module.customer.customerinquireBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 *
		 ,substring((select string_agg(nos||'['||sales||']'||':'||jobdate,f_newline() order by jobdate desc) from fina_jobs b where a.id = b.customerid AND b.isdelete = false AND jobdate > now()- INTERVAL '6 month') from 1 for 999) AS salesnos
		 ,(select MAX(b.jobdate) from fina_jobs b where a.id = b.customerid AND b.isdelete = false) AS jobdate
		 ,(SELECT string_agg(x.namec||'/'||x.namee||'/'||COALESCE((SELECT name FROM sys_department WHERE id = x.deptid),''),f_newline()) FROM sys_user x WHERE x.isdelete = FALSE AND EXISTS(SELECT 1 FROM sys_user_assign y WHERE y.isdelete = FALSE AND y.linkid=a.id AND linktype='C' AND roletype='S' AND y.userid=x.id)) AS assignsalesnamec
		 ,(select string_agg(namec||':'||y.remarks,f_newline()) from sys_user x , sys_user_assign y where x.id = y.userid AND x.isdelete = false AND y.isdelete = false AND y.linkid = a.id AND y.linktype='C' AND y.roletype='S') assignsalesremarks
		FROM _sys_corporation a  
		WHERE $qry$ 
			$filter$
			$filter2$
			$filter3$
			AND isdelete = false
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.customerinquireBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM _sys_corporation a 
		WHERE $qry$ 
			$filter$
			$filter2$
			$filter3$
			AND isdelete = false
	</select>

	<select id="pages.module.customer.syscorpinvBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 *
		FROM sys_corpinv a  
		WHERE $qry$ 
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.syscorpinvBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM sys_corpinv a 
		WHERE $qry$ 
			
	</select>

	<select id="pages.module.customer.sysContractBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
			*
		FROM sys_contract a
		WHERE $qry$
		  AND isdelete = false
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.sysContractBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
			count(*) AS counts
		FROM sys_contract a
		WHERE $qry$
		  AND isdelete = false

	</select>


	<select id="pages.module.customer.overseasagentBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT * FROM
		(
			select 
			 ag.*
			 ,(select namec from sys_user where isdelete = false and id = ag.salesid) AS sales
			 ,(select d.name from sys_user u ,sys_department d  where u.isdelete = false and u.id = ag.salesid and u.deptid = d.id) AS salesdepart
			 ,(SELECT count(1) FROM sys_attachment x WHERE isdelete = FALSE AND x.linkid = ag.id) AS attachmentcount
			 ,(SELECT count(1) from fina_jobs f WHERE f.isdelete = false and f.customerid = s.id and f.jobdate BETWEEN (now()::timestamp - INTERVAL '1 year') AND now()) AS num
			 ,(SELECT max(f.jobdate) from fina_jobs f WHERE f.isdelete = false and f.customerid = s.id) AS jobdate
			 ,(SELECT abbr FROM sys_corporation sc WHERE sc.id = (select corpid from sys_user where isdelete = false and id= ag.salesid)) AS company
			FROM sys_corporation_agent ag LEFT JOIN sys_corporation AS s ON (s.namee ILIKE ag.agentname AND s.isdelete = false)
			WHERE ag.isdelete = false
			order by ag.salesid
		) AS a
		WHERE $qry$ 
		LIMIT $limit$ OFFSET $start$
		
		
	</select>
	<select id="pages.module.customer.overseasagentBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM sys_corporation_agent a 
		WHERE $qry$ 
		and a.isdelete = false
			
	</select>

	<select id="pages.module.customer.apiBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
			a.id as customerid
			,a.apikey
		FROM sys_corporation a  
		WHERE $qry$
		and a.isdelete = false
		order by salesid
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.apiBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		 count(*) AS counts 
		FROM sys_corporation a 
		WHERE $qry$ 
		and a.isdelete = false		
	</select>




	<select id="pages.module.customer.customerarapBean.arapgrid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT
		       '总收付' AS title
			 , SUM(actualreceivablecny)                           as actualreceivablecnyall
			 , SUM(actualreceivableusd)                           as actualreceivableusdall
			 , SUM(actualreceivablehkd)                           as actualreceivableehkdall
			 , SUM(actualreceivableaed)                           as actualreceivableaedall
			 , SUM(actualreceivablegbp)                           as actualreceivablegbpall
			 , SUM(actualreceivableeur)                           as actualreceivableeurall
			 , SUM(actualreceivableomr)                           as actualreceivableomrall
			 , SUM(actualreceivablecad)                           as actualreceivablecadall

			 , SUM(actualpayablecny)                              as actualpayablecnyall
			 , SUM(actualpayableusd)                              as actualpayableusdall
			 , SUM(actualpayablehkd)                              as actualpayablehkddall
			 , SUM(actualpayableaed)                              as actualpayableaedall
			 , SUM(actualpayablegbp)                              as actualpayablegbpall
			 , SUM(actualpayableeur)                              as actualpayableeurall
			 , SUM(actualpayableomr)                              as actualpayableomrall
			 , SUM(actualpayablecad)                              as actualpayablecadall

			 , (SUM(actualreceivablecny) - SUM(actualpayablecny)) as differencecny
			 , (SUM(actualreceivableusd) - SUM(actualpayableusd)) as differenceusd
			 , (SUM(actualreceivablehkd) - SUM(actualpayablehkd)) as differencehkd
			 , (SUM(actualreceivableaed) - SUM(actualpayableaed)) as differenceaed
			 , (SUM(actualreceivablegbp) - SUM(actualpayablegbp)) as differencegbp
			 , (SUM(actualreceivableeur) - SUM(actualpayableeur)) as differenceeur
			 , (SUM(actualreceivableomr) - SUM(actualpayableomr)) as differenceomr
			 , (SUM(actualreceivablecad) - SUM(actualpayablecad)) as differencecad
		FROM (
				 SELECT arap.customerid                                                                                                                   as customerid
					  , (SELECT abbr FROM sys_corporation AS y WHERE y.id = arap.customerid)                                                              AS customerabbr

					  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'CNY' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablecny
					  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'USD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableusd
					  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'HKD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablehkd
					  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'AED' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableaed
					  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'GBP' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablegbp
					  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'EUR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableeur
					  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'OMR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableomr
					  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'CAD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablecad

					  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'CNY' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablecny
					  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'USD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableusd
					  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'HKD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablehkd
					  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'AED' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableaed
					  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'GBP' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablegbp
					  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'EUR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableeur
					  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'OMR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableomr
					  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'CAD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablecad

					  , (SELECT x.jobdate FROM fina_jobs x WHERE x.isdelete = FALSE AND x.id = arap.jobid)                                                AS jobdate
				 FROM fina_arap arap
				 WHERE arap.isdelete = false
			 ) aa
		WHERE 1 = 1
		   $qry0$
		LIMIT 1 OFFSET 0
	</select>
	<select id="pages.module.customer.customerarapBean.arapgrid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 10000 AS counts
	</select>

	<select id="pages.module.customer.customerarapBean.customearapgrid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		SELECT (SELECT abbr FROM sys_corporation x WHERE x.iscustomer = FALSE AND x.isdelete = FALSE AND x.ID = aa.corpid) customerabbr

		 , SUM(actualreceivablecny) as                                                                                 actualreceivablecnyall
		 , SUM(actualreceivableusd) as                                                                                 actualreceivableusdall
		 , SUM(actualreceivablehkd) as                                                                                 actualreceivableehkdall
		 , SUM(actualreceivableaed) as                                                                                 actualreceivableaedall
		 , SUM(actualreceivablegbp) as                                                                                 actualreceivablegbpall
		 , SUM(actualreceivableeur) as                                                                                 actualreceivableeurall
		 , SUM(actualreceivableomr) as                                                                                 actualreceivableomrall
		 , SUM(actualreceivablecad) as                                                                                 actualreceivablecadall

		 , SUM(actualpayablecny)    as                                                                                 actualpayablecnyall
		 , SUM(actualpayableusd)    as                                                                                 actualpayableusdall
		 , SUM(actualpayablehkd)    as                                                                                 actualpayablehkddall
		 , SUM(actualpayableaed)    as                                                                                 actualpayableaedall
		 , SUM(actualpayablegbp)    as                                                                                 actualpayablegbpall
		 , SUM(actualpayableeur)    as                                                                                 actualpayableeurall
		 , SUM(actualpayableomr)    as                                                                                 actualpayableomrall
		 , SUM(actualpayablecad)    as                                                                                 actualpayablecadall
	FROM (
			 SELECT arap.customerid                                                                                                                   as customerid
				  , arap.corpid                                                                                                                       as corpid
				  , (SELECT abbr FROM sys_corporation AS y WHERE y.id = arap.customerid)                                                              AS customerabbr

				  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'CNY' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablecny
				  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'USD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableusd
				  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'HKD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablehkd
				  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'AED' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableaed
				  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'GBP' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablegbp
				  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'EUR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableeur
				  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'OMR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableomr
				  , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'CAD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablecad

				  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'CNY' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablecny
				  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'USD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableusd
				  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'HKD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablehkd
				  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'AED' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableaed
				  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'GBP' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablegbp
				  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'EUR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableeur
				  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'OMR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableomr
				  , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'CAD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablecad

				  , (SELECT x.jobdate FROM fina_jobs x WHERE x.isdelete = FALSE AND x.id = arap.jobid)                                                AS jobdate
			 FROM fina_arap arap
			 WHERE arap.isdelete = false
		 ) aa
	WHERE 1 = 1
	  $qry0$
	group by corpid
	</select>
	<select id="pages.module.customer.customerarapBean.customearapgrid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 10000 AS counts
	</select>

	<select id="pages.module.customer.customerarapBean.montharapgrid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select *
		from (
				 SELECT jobdateyear
					  , jobdatemonth
					  , SUM(cnyamount)                                     as cnyamountall

					  , SUM(actualreceivablecny)                           as actualreceivablecnyall
					  , SUM(actualreceivableusd)                           as actualreceivableusdall
					  , SUM(actualreceivablehkd)                           as actualreceivableehkdall
					  , SUM(actualreceivableaed)                           as actualreceivableaedall
					  , SUM(actualreceivablegbp)                           as actualreceivablegbpall
					  , SUM(actualreceivableeur)                           as actualreceivableeurall
					  , SUM(actualreceivableomr)                           as actualreceivableomrall
					  , SUM(actualreceivablecad)                           as actualreceivablecadall

					  , SUM(actualpayablecny)                              as actualpayablecnyall
					  , SUM(actualpayableusd)                              as actualpayableusdall
					  , SUM(actualpayablehkd)                              as actualpayablehkddall
					  , SUM(actualpayableaed)                              as actualpayableaedall
					  , SUM(actualpayablegbp)                              as actualpayablegbpall
					  , SUM(actualpayableeur)                              as actualpayableeurall
					  , SUM(actualpayableomr)                              as actualpayableomrall
					  , SUM(actualpayablecad)                              as actualpayablecadall

					  , (SUM(actualreceivablecny) - SUM(actualpayablecny)) as differencecny
					  , (SUM(actualreceivableusd) - SUM(actualpayableusd)) as differenceusd
				 FROM (
						  SELECT arap.customerid                                                                                                                   as customerid
							   , arap.corpid                                                                                                                       as corpid
							   , (SELECT abbr FROM sys_corporation AS y WHERE y.id = arap.customerid)                                                              AS customerabbr
							   , f_amtto(arap.arapdate, arap.currency, 'CNY', (arap.amount - arap.amtstl2))::NUMERIC(18, 2)                                        AS cnyamount

							   , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'CNY' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablecny
							   , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'USD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableusd
							   , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'HKD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablehkd
							   , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'AED' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableaed
							   , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'GBP' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablegbp
							   , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'EUR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableeur
							   , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'OMR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivableomr
							   , (CASE WHEN arap.araptype = 'AR' AND arap.currency = 'CAD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualreceivablecad

							   , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'CNY' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablecny
							   , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'USD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableusd
							   , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'HKD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablehkd
							   , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'AED' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableaed
							   , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'GBP' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablegbp
							   , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'EUR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableeur
							   , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'OMR' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayableomr
							   , (CASE WHEN arap.araptype = 'AP' AND arap.currency = 'CAD' THEN (COALESCE(arap.amount, 0) - COALESCE(arap.amtstl2, 0)) ELSE 0 END) AS actualpayablecad


							   , (SELECT x.jobdate FROM fina_jobs x WHERE x.isdelete = FALSE AND x.id = arap.jobid)                                                AS jobdate
							   , extract(year from (SELECT x.jobdate FROM fina_jobs x WHERE x.isdelete = FALSE AND x.id = arap.jobid))                             as jobdateyear
							   , extract(month from (SELECT x.jobdate FROM fina_jobs x WHERE x.isdelete = FALSE AND x.id = arap.jobid))                            as jobdatemonth
						  FROM fina_arap arap
						  WHERE arap.isdelete = false
					  ) aa
				 WHERE 1 = 1
					$qry0$
					 group by jobdateyear, jobdatemonth
					 order by jobdateyear, jobdatemonth
				 ) aaa
			where 1 = 1
			  and cnyamountall != 0
	</select>
	<select id="pages.module.customer.customerarapBean.montharapgrid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 10000 AS counts
	</select>

	<select id="pages.module.customer.operatelogBean.grid.page" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select *
		FROM
		(
		 	SELECT
				t.*,
				CASE
					WHEN ((t.optype)::text = 'I'::text) THEN '新增'::character varying
					WHEN ((t.optype)::text = 'U'::text) THEN '修改'::character varying
					WHEN ((t.optype)::text = 'D'::text) THEN '删除'::character varying
					WHEN ((t.optype)::text = 'P'::text) THEN '打印'::character varying
					WHEN ((t.optype)::text = 'E'::text) THEN '导出'::character varying
					ELSE t.optype
				END AS optypedesc2,
				COALESCE(( SELECT x.namec FROM sys_user x	WHERE (x.code::text = (t.opusr)::text) AND (x.isdelete = false) LIMIT 1), t.opusr) AS opusrname2
			FROM bus_tableoptrace t
		) t
		WHERE $qry$
			$filter$
		ORDER BY optime desc
		LIMIT $limit$ OFFSET $start$
	</select>
	<select id="pages.module.customer.operatelogBean.grid.count" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
		 count(*) AS counts
		FROM bus_tableoptrace t
		WHERE $qry$
			$filter$
	</select>
</sqlMap>
